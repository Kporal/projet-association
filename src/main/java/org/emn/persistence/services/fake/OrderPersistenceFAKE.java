/*
 * Created on 7 oct. 2013 ( Time 10:49:54 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
package org.emn.persistence.services.fake;

import java.util.List;
import java.util.Map;

import org.emn.bean.Order ;
import org.emn.persistence.commons.fake.GenericFakeService;
import org.emn.persistence.services.OrderPersistence;

/**
 * Fake persistence service implementation ( entity "Order" )
 *
 * @author Telosys Tools Generator
 */
public class OrderPersistenceFAKE extends GenericFakeService<Order> implements OrderPersistence {

	public OrderPersistenceFAKE () {
		super(Order.class);
	}
	
	protected Order buildEntity(int index) {
		Order entity = new Order();
		// Init fields with mock values
		entity.setUserId( nextInteger() ) ;
		entity.setArticleId( nextInteger() ) ;
		return entity ;
	}
	
	
	public boolean delete(Order entity) {
		log("delete ( Order : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( int userId, int articleId ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(Order entity) {
		log("insert ( Order : " + entity + ")" ) ;
	}

	public Order load( int userId, int articleId ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<Order> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<Order> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<Order> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public Order save(Order entity) {
		log("insert ( Order : " + entity + ")" ) ;
		return entity;
	}

	public List<Order> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

}
