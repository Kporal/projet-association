/*
 * Created on 7 oct. 2013 ( Time 10:49:49 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
package org.emn.persistence.services.fake;

import java.util.List;
import java.util.Map;

import org.emn.bean.Item ;
import org.emn.persistence.commons.fake.GenericFakeService;
import org.emn.persistence.services.ItemPersistence;

/**
 * Fake persistence service implementation ( entity "Item" )
 *
 * @author Telosys Tools Generator
 */
public class ItemPersistenceFAKE extends GenericFakeService<Item> implements ItemPersistence {

	public ItemPersistenceFAKE () {
		super(Item.class);
	}
	
	protected Item buildEntity(int index) {
		Item entity = new Item();
		// Init fields with mock values
		entity.setId( nextInteger() ) ;
		entity.setCode( nextString() ) ;
		entity.setName( nextString() ) ;
		entity.setPrice( nextDouble() ) ;
		entity.setStock( nextInteger() ) ;
		return entity ;
	}
	
	
	public boolean delete(Item entity) {
		log("delete ( Item : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( int id ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(Item entity) {
		log("insert ( Item : " + entity + ")" ) ;
	}

	public Item load( int id ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<Item> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<Item> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<Item> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public Item save(Item entity) {
		log("insert ( Item : " + entity + ")" ) ;
		return entity;
	}

	public List<Item> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

}
