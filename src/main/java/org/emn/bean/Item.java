/*
 * Created on 7 oct. 2013 ( Time 10:49:47 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.emn.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Persistent class for entity stored in table "ARTICLE"
 * 
 * @author Telosys Tools Generator
 * 
 */
@XmlRootElement
// JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY)
// JAXB accessor = getter/setter pair
@Entity
@Table(name = "ARTICLE", schema = "PASSO")
// Define named queries here
// @NamedQueries ( {
// @NamedQuery ( name="Item.query1", query="SELECT x FROM Item x WHERE  " ),
// @NamedQuery ( name="Item.query2", query="SELECT x FROM Item x WHERE  " )
// } )
public class Item implements Serializable {
	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@Column(name = "ID", nullable = false)
	private int id;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "CODE", length = 5)
	private String code;

	@Column(name = "NOM", length = 50)
	private String name;

	@Column(name = "PRIX")
	private Double price;

	@Column(name = "STOCK")
	private Integer stock;

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------
	@ManyToMany(targetEntity = User.class, fetch = FetchType.EAGER)
	@JoinTable(name = "COMMANDE", schema = "PASSO", joinColumns = @JoinColumn(name = "ARTICLE_ID", referencedColumnName = "ID"), inverseJoinColumns = @JoinColumn(name = "USER_ID", referencedColumnName = "ID"))
	private List<User> listOfUser;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public Item() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setId(int id) {
		this.id = id;
	}

	public int getId() {
		return this.id;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : CODE ( VARCHAR )
	public void setCode(String code) {
		this.code = code;
	}

	public String getCode() {
		return this.code;
	}

	// --- DATABASE MAPPING : NOM ( VARCHAR )
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	// --- DATABASE MAPPING : PRIX ( DOUBLE )
	public void setPrice(Double price) {
		this.price = price;
	}

	public Double getPrice() {
		return this.price;
	}

	// --- DATABASE MAPPING : STOCK ( INTEGER )
	public void setStock(Integer stock) {
		this.stock = stock;
	}

	public Integer getStock() {
		return this.stock;
	}
	
	public boolean stockAdd() {
		this.stock += 1;
		return true;
	}
	
	public boolean stockRemove() {
		if(this.stock >= 1) {
			this.stock -= 1;
			return true;
		}
		return false;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------
	@XmlTransient
	public void setListOfUser(List<User> listOfUser) {
		this.listOfUser = listOfUser;
	}

	public List<User> getListOfUser() {
		return this.listOfUser;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append(id);
		sb.append("|");
		sb.append(code);
		sb.append("|");
		sb.append(name);
		sb.append("|");
		sb.append(price);
		sb.append("|");
		sb.append(stock);
		return sb.toString();
	}
}
